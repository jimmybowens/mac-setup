#!/bin/bash
let error_status=0
declare -a subholder
dieformat()
{
  if [ -t 2 ];then
    echo -ne "\033[4;31mERROR\033[0m: " >&2
  else
    echo -ne "ERROR: " >&2
  fi
  if [ $# -gt 0 ];then
    echo "$*" >&2
  fi
}
die()
{
  let error_status++
  dieformat "$@"
  exit $error_status
}

cleanup_with_errors()
{
  die "cwatch: an error has occured...aborting"
}

cleanup_exit()
{
  exec 3>&-
  exit $error_status
}
trap cleanup_with_errors SIGHUP SIGTERM SIGINT SIGPIPE
trap cleanup_exit EXIT

dep(){
  dep_result=
  if [ -z "$1" ];then
    return 1
  fi
  if [ -p "/tmp/cwatch-nosub" ];then
    rm -f "/tmp/cwatch-nosub" > /dev/null 2>&1
    exec 3>&-
  fi
  mkfifo "/tmp/cwatch-nosub" > /dev/null 2>&1
  if [ ! -p "/tmp/cwatch-nosub" ];then
    die "could not create pipe"
  fi
  exec 3<> "/tmp/cwatch-nosub"
  if which "$1" 2> /dev/null 1>&3;then
    read -u3 dep_result
    exec 3>&-
    rm -f "/tmp/cwatch-nosub" > /dev/null 2>&1
    return 0
  fi
  return 1
}
sub()
{
  sub_result=
  if [ $# -eq 0 ];then
    return 1
  fi
  unset subholder
  while (( $# ));do
    subholder+=("$1")
    shift
  done
  if [ -p "/tmp/cwatch-nosub" ];then
    rm -f "/tmp/cwatch-nosub" > /dev/null 2>&1
    exec 3>&-
  fi
  mkfifo "/tmp/cwatch-nosub" > /dev/null 2>&1
  if [ ! -p "/tmp/cwatch-nosub" ];then
    die "could not create pipe"
  fi
  exec 3<> "/tmp/cwatch-nosub"
  if "${subholder[@]}" 2> /dev/null  1>&3;then
    read -u3 sub_result
    exec 3>&-
    rm -f "/tmp/cwatch-nosub" > /dev/null 2>&1
    return 0
  fi
  exec 3>&-
  rm -f "/tmp/cwatch-nosub" > /dev/null 2>&1
  return 1
}

#if sub cat ~/Desktop/hello.txt;then
#  echo "$sub_result"
#fi

#directories to watch
declare -a directories
if dep 'binbuild';then
  BIN_BUILD="$dep_result"
fi
lock_dir="$HOME/.watch-lock"
if [ ! -d "$lock_dir" ];then
  mkdir -p "$lock_dir" > /dev/null 2>&1
  if [ ! -d "$lock_dir" ];then
    echo "ERROR: cannot create a lock"
    exit 1
  fi
fi

while (( $# ));do
  if [ -z "$1" ];then
    echo "ERROR: cannot use empty params"
    exit 1
  elif [ "$1" == '-d' ];then
    shift
    if [ -z "$1" ];then
      echo "ERROR: no values entered for directories"
      exit 1
    fi
    while (( $# ));do
      if [ -z "$1" ];then
	echo "ERROR: cannot use empty params"
	exit 1
      elif [ "$1" == '-d' ];then
	break
      elif [ ! -d "$1" ];then
	echo "ERROR: $1 is not a directory"
	exit 1
      else
	directories+=("$1");
	shift
      fi
    done
  else
    echo "ERROR: invalid command $1"
    exit 1
  fi
done

if [ "${#directories[@]}" -eq 0 ];then
  directories+=("$PWD")
fi

let running=1
name=
last_modified=
previous_modified=
if ! which stat > /dev/null 2>&1;then
  echo "ERROR: dependency stat not installed"
  exit 1
fi
while (( "$running" ));do
  for directory in "${directories[@]}";do
    if [ -d "$directory" ];then
      for file in "$directory"/*;do
	if [ -e "$file" ];then
	  name="${file##*/}"
	  name="${name%.*}"
	  if sub stat -f "%Sm" -t %s "$file";then
	    last_modified="$sub_result"
	  else
	    die "could not get modified date"
	  fi
	  #last_modified=$(stat -f "%Sm" -t %s $file 2> /dev/null)
	  if [ -z "$last_modified" ];then
	    let last_modified=0
	  fi
	  if [ ! -f "$lock_dir/$name.mod" ];then
	    echo "$last_modified" > "$lock_dir/$name.mod"
	    echo "$file" > "$lock_dir/$name.dest"
	    echo "new file -> $file"
	  else
	    previous_modified=$(cat "$lock_dir/$name.mod")
	    let mod_diff=$((last_modified - previous_modified))
	    if [ $mod_diff -gt 0 ];then
	      echo "changed -> $file"
	      if ! sudo $BIN_BUILD -d "$directory";then
		die "could not build bin"
	      fi
	    fi
	    echo "$last_modified" > "$lock_dir/$name.mod"
	  fi
	fi
      done
    fi
  done
  #check deleted
  for lock_dest in "$lock_dir"/*.dest;do
    if [ -f "$lock_dest" ];then
      dest=$(cat "$lock_dest")
      if [ ! -e "$dest" ];then
	name="${lock_dest##*/}"
	name="${name%.*}"
	echo "deleted -> $dest"
	rm -f "$lock_dest" > /dev/null 2>&1
	rm -f "$lock_dir/$name.mod" > /dev/null 2>&1
      fi
    fi
  done
done
